groups:
- name: docker-boshrelease
  jobs:
  - testflight
  - testflight-pr
  - release-candidate
  - ship-it
  - bump-major
  - bump-minor

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

resources:
- name: git-docker-boshrelease
  type: git
  source:
    uri: git@github.com:cloudfoundry-incubator/docker-boshrelease
    branch: tmp/kubo-ci
    private_key: ((git-ssh-key))

- name: git-pull-requests
  type: pull-request
  source:
    repo: cloudfoundry-incubator/docker-boshrelease
    base: master
    private_key: ((git-ssh-key))
    access_token: ((github-token-key))

- name: version
  type: semver
  source:
    driver: gcs
    bucket: kubo-pipeline-store
    key: docker-boshrelease-version
    json_key: ((gcs-json-key))
    initial_version: 31.0.1

- name: slack-notification
  type: slack-notification
  source:
    url: ((build-alert-slack-url))

- name: github-release
  type: github-release
  source:
    user: cloudfoundry-incubator
    repository: docker-boshrelease
    access_token: ((github-kubo-gitbot-access-token))

- name: s3-tarball
  type: s3
  source:
    bucket: docker-boshrelease
    region_name: us-east-1
    access_key_id: invalid
    secret_access_key: invalid
    regexp: docker-(.*).tgz

jobs:
- name: testflight
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: git-docker-boshrelease
        trigger: true
    - aggregate:
      - name: testflight
        task: testflight
        config:
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
              tag: latest
          inputs:
          - name: git-docker-boshrelease
          params: &testflight_params
            AWS_ACCESS_KEY: invalid
            AWS_SECRET_KEY: invalid
            PROXY_PRIVATE_KEY: ((docker-bosh.proxy-private-key))
            PROXY_USERNAME: ((docker-bosh.proxy-username))
            PROXY_IP: ((docker-bosh.proxy-ip))
            BOSH_CA_CERT: ((docker-bosh.ca-cert))
            BOSH_CLIENT: ((docker-bosh.client))
            BOSH_CLIENT_SECRET: ((docker-bosh.client-secret))
            BOSH_DEPLOYMENT: docker-testflighten
            BOSH_ENVIRONMENT: ((docker-bosh.environment))
            MANIFEST_OP_PATHS: ""
            MANIFEST_PATH: manifests/containers/example.yml
            MANIFEST_VARS: '--- {}'
            REPO_ROOT: git-docker-boshrelease
            TEST_ERRANDS: null
          platform: linux
          run:
            path: ./git-docker-boshrelease/ci/scripts/testflight
            args: []
      - name: testflight-swarm
        task: testflight-swarm
        config:
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
              tag: latest
          inputs:
          - name: git-docker-boshrelease
          params:
            <<: *testflight_params
            BOSH_DEPLOYMENT: docker-swarm-testflight
            MANIFEST_PATH: manifests/swarm/docker-swarm.yml
          platform: linux
          run:
            path: ./git-docker-boshrelease/ci/scripts/testflight
            args: []
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: testflight job failed'

- name: testflight-pr
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: git-pull-requests
        version: every
        trigger: true
    - put: git-pull-requests
      params:
        path: git-pull-requests
        status: pending
    - aggregate:
      - name: testflight
        task: testflight
        config:
          image_resource:
            type: docker-image
            source:
              repository: starkandwayne/concourse
              tag: latest
          inputs:
          - name: git-pull-requests
          params:
            <<: *testflight_params
            BOSH_DEPLOYMENT: docker-testflight-pr
            REPO_ROOT: git-pull-requests
          platform: linux
          run:
            path: ./git-pull-requests/ci/scripts/testflight
            args: []
        on_failure:
          params:
            path: git-pull-requests
            status: failure
          put: git-pull-requests
        on_success:
          params:
            path: git-pull-requests
            status: success
          put: git-pull-requests
      - name: testflight-swarm
        task: testflight-swarm
        config:
          image_resource:
            source:
              repository: starkandwayne/concourse
              tag: latest
            type: docker-image
          inputs:
          - name: git-pull-requests
          params:
            <<: *testflight_params
            BOSH_DEPLOYMENT: docker-swarm-testflight-pr
            MANIFEST_PATH: manifests/swarm/docker-swarm.yml
            REPO_ROOT: git-pull-requests
          platform: linux
          run:
            path: ./git-pull-requests/ci/scripts/testflight
            args: []
    - name: pr-success-message
      task: pr-success-message
      config:
        image_resource:
          type: docker-image
          source:
            repository: starkandwayne/concourse
            tag: latest
        inputs:
        - name: git-pull-requests
        outputs:
        - name: message
        platform: linux
        run:
          args:
          - -ce
          - |
            cd git-pull-requests
            pr_url=$(git config --get pullrequest.url)
            cd -
            echo "<${pr_url}|Pull request passed testflight> Merge when ready: ${pr_url}" > message/body
          path: sh
    on_success:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text_file: message/body

- name: release-candidate
  public: true
  plan:
  - do:
    - aggregate:
      - get: git-docker-boshrelease
        passed: [ testflight ]
        trigger: true
      - get: version
        params:
          pre: rc
        trigger: true
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: rc job failed'

- name: bump-minor
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: minor
      trigger: false
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: bump-minor job failed'

- name: bump-major
  public: true
  plan:
  - do:
    - get: version
      params:
        bump: major
      trigger: false
    - put: version
      params:
        file: version/number
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: bump-major job failed'

- name: ship-it
  public: true
  serial: true
  plan:
  - do:
    - aggregate:
      - get: version
        params:
          bump: final
        passed: [ release-candidate ]
      - get: git-docker-boshrelease
        passed: [ release-candidate ]
      name: inputs
    - name: release
      task: release
      config:
        image_resource:
          type: docker-image
          source:
            repository: starkandwayne/concourse
            tag: latest
        inputs:
        - name: version
        - name: git-docker-boshrelease
        outputs:
        - name: gh
        - name: pushme
        - name: notifications
        params:
          AWS_ACCESS_KEY: invalid
          AWS_SECRET_KEY: invalid
          BRANCH: master
          GIT_EMAIL: invalid
          GIT_NAME: invalid
          GITHUB_OWNER: cloudfoundry-community
          NOTIFICATION_OUT: notifications
          RELEASE_ROOT: gh
          REPO_OUT: pushme
          REPO_ROOT: git-docker-boshrelease
          VERSION_FROM: version/number
        platform: linux
        run:
          path: ./git-docker-boshrelease/ci/scripts/shipit
          args: []
    - put: git-docker-boshrelease
      params:
        rebase: true
        repository: pushme/git-docker-boshrelease
    - put: s3-tarball
      params:
        file: gh/artifacts/docker-*.tgz
    - put: github-release
      params:
        body: gh/notes.md
        globs:
        - gh/artifacts/*
        name: gh/name
        tag: gh/tag
    - put: version
      params:
        bump: patch
    - aggregate:
      - put: slack-notification
        params:
          channel: '#docker-boshrelease'
          text_file: notifications/message
    on_failure:
      put: slack-notification
      params:
        channel: '#docker-boshrelease'
        text: '<https://ci.kubo.sh/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|
          Concourse Failure! :sad_panda:> docker-boshrelease: shipit job failed'
